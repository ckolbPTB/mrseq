name: Build and Deploy Package

on:
  push:
    paths:
      - src/mrseq/VERSION

jobs:
  check_version_change:
    name: Check for Version Changes
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.changes.outputs.version_changed }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Check if VERSION file is modified compared to main
        uses: dorny/paths-filter@v3
        id: changes
        with:
          base: main
          filters: |
            version_changed:
              - 'src/mrseq/VERSION'

      - name: Set Version Suffix
        id: set_suffix
        run: |
          VERSION=$(cat src/mrseq/VERSION)
          SUFFIX=rc$(date +%s)
          echo "VERSIONSUFFIX=$SUFFIX" >> $GITHUB_ENV
          echo "suffix=$SUFFIX" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-pypi-package:
    name: Build Package for PyPI
    needs:
      - check_version_change
    runs-on: ubuntu-latest
    if: needs.check_version_change.outputs.version_changed == 'true'
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Automatic Versioning Tool
        run: |
          python -m pip install setuptools-git-versioning

      - name: Get Current Version
        id: get_version
        run: |
          VERSION=$(python -m setuptools_git_versioning)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build Package
        run: |
          python -m pip install --upgrade build
          python -m build

      - name: Store PyPI Distribution
        uses: actions/upload-artifact@v4
        with:
          name: pypi-package-distribution
          path: dist/

  pypi-deployment:
    name: Deploy to PyPI
    needs:
      - build-pypi-package
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/project/mrseq

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download PyPI Distribution
        uses: actions/download-artifact@v5
        with:
          name: pypi-package-distribution
          path: dist/

      - name: Create Tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ needs.build-pypi-package.outputs.version }}',
              sha: context.sha
            })

      - name: Create Release
        uses: actions/github-script@v7
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            github.rest.repos.createRelease({
              draft: false,
              generate_release_notes: true,
              name: "v${{ needs.build-pypi-package.outputs.version }}",
              owner: context.repo.owner,
              prerelease: false,
              repo: context.repo.repo,
              tag_name: "v${{ needs.build-pypi-package.outputs.version }}",
            });

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/
          verbose: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

  # Cancel in-progress runs when a new workflow with the same group name is triggered
  cancel-in-progress: true
